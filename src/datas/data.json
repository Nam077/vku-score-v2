{
  "code2": "function decodeHtmlEntities(text) {\n    const entities = [\n        ['amp', '&'],\n        ['apos', \"'\"],\n        ['lt', '<'],\n        ['gt', '>'],\n        ['quot', '\"'],\n    ];\n    for (let i = 0; i < entities.length; i++) {\n        text = text.replace(new RegExp(`&${entities[i][0]};`, 'g'), entities[i][1]);\n    }\n    return text;\n}\nlet table = document.getElementsByTagName('table');\nlet tableScore = table[1];\nlet elementScores = tableScore.getElementsByClassName('pointer');\nlet scoreAll = [];\nfor (let tr of elementScores) {\n    let score = {};\n    let tdList = tr.getElementsByTagName('td');\n\n    score.id = tdList[0] ? tdList[0].innerHTML : '';\n    if (score.id !== '') {\n        score.id = parseInt(score.id);\n    }\n    // Remove unnecessary span tag in the \"name\" field\n    let nameField = tdList[1] ? tdList[1].innerHTML : '';\n    score.name = nameField.replace(/<[^>]+>/g, '').trim();\n    // xoá tất cả các ký tự đặc biệt\n    score.name = decodeHtmlEntities(nameField.replace(/<[^>]+>/g, '').replace('!!', '')).trim();\n\n    if (score.name === '') {\n        continue;\n    }\n    score.countTC = tdList[2] ? tdList[2].innerHTML : '';\n    if (score.countTC !== '') {\n        score.countTC = parseInt(score.countTC);\n    }\n    score.countLH = tdList[3] ? tdList[3].innerHTML : '';\n    if (score.countLH !== '') {\n        score.countLH = parseInt(score.countLH);\n    }\n    score.scoreCC = tdList[4] ? tdList[4].innerHTML.trim() : '';\n    if (score.scoreCC !== '') {\n        score.scoreCC = parseFloat(score.scoreCC);\n    }\n    score.scoreBT = tdList[5] ? tdList[5].innerHTML : '';\n    if (score.scoreBT !== '') {\n        score.scoreBT = parseFloat(score.scoreBT);\n    }\n    score.scoreGK = tdList[6] ? tdList[6].innerHTML : '';\n    if (score.scoreGK !== '') {\n        score.scoreGK = parseFloat(score.scoreGK);\n    }\n    score.scoreCK = tdList[7] ? tdList[7].innerHTML : '';\n    if (score.scoreCK !== '') {\n        score.scoreCK = parseFloat(score.scoreCK);\n    }\n    // Extract values from <b> tags in scoreT10 and scoreCh fields\n    let scoreT10Field = tdList[8] ? tdList[8].innerHTML : '';\n    let scoreT10Match = scoreT10Field.match(/<b>(.*?)<\\/b>/);\n    score.scoreT10 = scoreT10Match ? scoreT10Match[1] : '';\n    if (score.scoreT10 !== '') {\n        score.scoreT10 = parseFloat(score.scoreT10);\n    }\n    let scoreChField = tdList[9] ? tdList[9].innerHTML : '';\n    let scoreChMatch = scoreChField.match(/<b[^>]*>(.*?)<\\/b>/);\n    score.scoreCh = scoreChMatch ? scoreChMatch[1] : '';\n    scoreAll.push(score);\n}\nlet duplicate = {};\nscoreAll.forEach((score) => {\n    if (!duplicate[score.name]) {\n        duplicate[score.name] = score;\n    } else {\n        if (score.scoreT10 > duplicate[score.name].scoreT10) {\n            duplicate[score.name] = score;\n        }\n    }\n});\nscoreAll = Object.values(duplicate);\nlet dataDownload = {\n    scoreAll,\n};\nlet json = JSON.stringify(dataDownload);\nconst blob = new Blob([json], { type: 'application/json' });\nconst url = URL.createObjectURL(blob);\nconst link = document.createElement('a');\nlink.href = url;\nlink.download = 'diem.json';\nlink.click();\nURL.revokeObjectURL(url);\nlink.remove();\n",
  "code": "function decodeHtmlEntities(text) {\n    const entities = [\n        ['amp', '&'],\n        ['apos', \"'\"],\n        ['lt', '<'],\n        ['gt', '>'],\n        ['quot', '\"'],\n    ];\n\n    for (let i = 0; i < entities.length; i++) {\n        text = text.replace(new RegExp(`&${entities[i][0]};`, 'g'), entities[i][1]);\n    }\n\n    return text;\n}\nlet table = document.getElementsByTagName('table');\nlet tableScore = table[1];\nlet elementScores = tableScore.getElementsByClassName('pointer');\nlet scoreAll = [];\n\nfor (let tr of elementScores) {\n    let score = {};\n    let tdList = tr.getElementsByTagName('td');\n\n    score.id = tdList[0] ? tdList[0].innerHTML : '';\n    if (score.id !== '') {\n        score.id = parseInt(score.id);\n    }\n    // Remove unnecessary span tag in the \"name\" field\n    let nameField = tdList[1] ? tdList[1].innerHTML : '';\n    score.name = nameField.replace(/<[^>]+>/g, '').trim();\n    // xoá tất cả các ký tự đặc biệt\n    score.name = decodeHtmlEntities(nameField.replace(/<[^>]+>/g, '').replace('!!', '')).trim();\n\n    if (score.name === '') {\n        continue;\n    }\n    score.countTC = tdList[2] ? tdList[2].innerHTML : '';\n    if (score.countTC !== '') {\n        score.countTC = parseInt(score.countTC);\n    }\n    score.countLH = tdList[3] ? tdList[3].innerHTML : '';\n    if (score.countLH !== '') {\n        score.countLH = parseInt(score.countLH);\n    }\n    score.scoreCC = tdList[4] ? tdList[4].innerHTML.trim() : '';\n    if (score.scoreCC !== '') {\n        score.scoreCC = parseFloat(score.scoreCC);\n    }\n    score.scoreBT = tdList[5] ? tdList[5].innerHTML : '';\n    if (score.scoreBT !== '') {\n        score.scoreBT = parseFloat(score.scoreBT);\n    }\n    score.scoreGK = tdList[6] ? tdList[6].innerHTML : '';\n    if (score.scoreGK !== '') {\n        score.scoreGK = parseFloat(score.scoreGK);\n    }\n    score.scoreCK = tdList[7] ? tdList[7].innerHTML : '';\n    if (score.scoreCK !== '') {\n        score.scoreCK = parseFloat(score.scoreCK);\n    }\n    // Extract values from <b> tags in scoreT10 and scoreCh fields\n    let scoreT10Field = tdList[8] ? tdList[8].innerHTML : '';\n    let scoreT10Match = scoreT10Field.match(/<b>(.*?)<\\/b>/);\n    score.scoreT10 = scoreT10Match ? scoreT10Match[1] : '';\n    if (score.scoreT10 !== '') {\n        score.scoreT10 = parseFloat(score.scoreT10);\n    }\n    let scoreChField = tdList[9] ? tdList[9].innerHTML : '';\n    let scoreChMatch = scoreChField.match(/<b[^>]*>(.*?)<\\/b>/);\n    score.scoreCh = scoreChMatch ? scoreChMatch[1] : '';\n    scoreAll.push(score);\n}\nlet duplicate = {};\nscoreAll.forEach((score) => {\n    if (!duplicate[score.name]) {\n        duplicate[score.name] = score;\n    } else {\n        if (score.scoreT10 > duplicate[score.name].scoreT10) {\n            duplicate[score.name] = score;\n        }\n    }\n});\n\nscoreAll = Object.values(duplicate);\n\nlet scoreClassify = {\n    A: {\n        tinChi: 0,\n        data: [],\n    },\n    B: {\n        tinChi: 0,\n        data: [],\n    },\n    C: {\n        tinChi: 0,\n        data: [],\n    },\n    D: {\n        tinChi: 0,\n        data: [],\n    },\n    F: {\n        tinChi: 0,\n        data: [],\n    },\n    AllTinChi: 0,\n    GPA: 0,\n};\n\nscoreAll.forEach((score) => {\n    if (score.scoreCh === 'A') {\n        scoreClassify.A.data.push(score);\n        scoreClassify.A.tinChi += score.countTC;\n    } else if (score.scoreCh === 'B') {\n        scoreClassify.B.data.push(score);\n        scoreClassify.B.tinChi += score.countTC;\n    } else if (score.scoreCh === 'C') {\n        scoreClassify.C.data.push(score);\n        scoreClassify.C.tinChi += score.countTC;\n    } else if (score.scoreCh === 'D') {\n        scoreClassify.D.data.push(score);\n        scoreClassify.D.tinChi += score.countTC;\n    } else if (score.scoreCh === 'F') {\n        scoreClassify.F.data.push(score);\n        scoreClassify.F.tinChi += score.countTC;\n    }\n});\nscoreClassify.AllTinChi +=\n    scoreClassify.A.tinChi +\n    scoreClassify.B.tinChi +\n    scoreClassify.C.tinChi +\n    scoreClassify.D.tinChi +\n    scoreClassify.F.tinChi;\nscoreClassify.Gpa =\n    (4 * scoreClassify.A.tinChi +\n        3 * scoreClassify.B.tinChi +\n        2 * scoreClassify.C.tinChi +\n        1 * scoreClassify.D.tinChi +\n        scoreClassify.F.tinChi) /\n    scoreClassify.AllTinChi;\nlet count = {\n    A: scoreClassify.A.tinChi,\n    B: scoreClassify.B.tinChi,\n    C: scoreClassify.C.tinChi,\n    D: scoreClassify.D.tinChi,\n    F: scoreClassify.F.tinChi,\n};\nlet dataDownload = {\n    scoreClassify,\n    scoreAll,\n    count,\n};\nlet json = JSON.stringify(dataDownload);\n\nconst blob = new Blob([json], { type: 'application/json' });\n\nconst url = URL.createObjectURL(blob);\n\nconst link = document.createElement('a');\nlink.href = url;\nlink.download = 'scoreClassify.json';\n\nlink.click();\n\nURL.revokeObjectURL(url);\nlink.remove();",
  "readme": "# Cách lấy danh sách điểm\n\n### Bước 1:\nTruy cập vào trang [đăng nhập](https://daotao.vku.udn.vn/sv) của VKU\n\n<img src=\"https://i.ibb.co/hmghpT6/image.png\" alt=\"image\" border=\"0\">\n\n### Bước 2:\nSau khi đăng nhập thành công, truy cập vào trang [điểm](https://daotao.vku.udn.vn/sv/diem) của VKU\n\n<img src=\"https://i.ibb.co/CzBqD45/image.png\" alt=\"image\" border=\"0\">\n\n### Bước 3:\n\n#### Mở chế độ `Developer Tools` của trình duyệt\n   \nCác cách mở `Developer Tools`:\n- Bấm tổ hợp phím `F12` hoặc `Fn + F12`(nếu thiết bị cần thêm phím `Fn`) trên bàn phím\n- Trên trình duyệt Chrome, Edge, Opera, Vivaldi, Brave, Coc Coc, Yandex, Firefox ...: Nhấn tổ hợp phím `Ctrl + Shift + I` hoặc `F12`\n- Trên trình duyệt Safari: Nhấn tổ hợp phím `Option + Command + I`\n- Hoặc có thể click chuột phải vào trang web \n  - Nếu sử dụng ngôn ngữ tiếng Anh: Chọn `Inspect` hoặc `Inspect Element`\n  - Nếu sử dụng ngôn ngữ tiếng Việt: Chọn `Kiểm tra` hoặc `Kiểm tra phần tử`\n\nSau khi mở `Developer Tools` thành công, chọn tab `Console` để tiến hành thực hiện các bước tiếp theo\n\n<img src=\"https://i.ibb.co/QCzyV7y/image.png\" alt=\"image\" border=\"0\">\n\n### Bước 4: Tải xuống file điểm\n\nCopy đoạn mã sau và dán vào `Console` rồi nhấn `Enter` để thực hiện\n\n<i  class=\"text-danger\" > Chúng tôi cam kết 100% không thu thập dữ liệu người dùng. Đoạn code này mục đích chỉ lấy thông tin điểm của người dùng ở phía frontend và không can thiệp vào hệ thống của trường. </i>\n\n```javascript\nfunction decodeHtmlEntities(text) {\n    const entities = [\n        ['amp', '&'],\n        ['apos', \"'\"],\n        ['lt', '<'],\n        ['gt', '>'],\n        ['quot', '\"'],\n    ];\n    for (let i = 0; i < entities.length; i++) {\n        text = text.replace(new RegExp(`&${entities[i][0]};`, 'g'), entities[i][1]);\n    }\n    return text;\n}\nlet table = document.getElementsByTagName('table');\nlet tableScore = table[1];\nlet elementScores = tableScore.getElementsByClassName('pointer');\nlet scoreAll = [];\nfor (let tr of elementScores) {\n    let score = {};\n    let tdList = tr.getElementsByTagName('td');\n\n    score.id = tdList[0] ? tdList[0].innerHTML : '';\n    if (score.id !== '') {\n        score.id = parseInt(score.id);\n    }\n    // Remove unnecessary span tag in the \"name\" field\n    let nameField = tdList[1] ? tdList[1].innerHTML : '';\n    score.name = nameField.replace(/<[^>]+>/g, '').trim();\n    // xoá tất cả các ký tự đặc biệt\n    score.name = decodeHtmlEntities(nameField.replace(/<[^>]+>/g, '').replace('!!', '')).trim();\n\n    if (score.name === '') {\n        continue;\n    }\n    score.countTC = tdList[2] ? tdList[2].innerHTML : '';\n    if (score.countTC !== '') {\n        score.countTC = parseInt(score.countTC);\n    }\n    score.countLH = tdList[3] ? tdList[3].innerHTML : '';\n    if (score.countLH !== '') {\n        score.countLH = parseInt(score.countLH);\n    }\n    score.scoreCC = tdList[4] ? tdList[4].innerHTML.trim() : '';\n    if (score.scoreCC !== '') {\n        score.scoreCC = parseFloat(score.scoreCC);\n    }\n    score.scoreBT = tdList[5] ? tdList[5].innerHTML : '';\n    if (score.scoreBT !== '') {\n        score.scoreBT = parseFloat(score.scoreBT);\n    }\n    score.scoreGK = tdList[6] ? tdList[6].innerHTML : '';\n    if (score.scoreGK !== '') {\n        score.scoreGK = parseFloat(score.scoreGK);\n    }\n    score.scoreCK = tdList[7] ? tdList[7].innerHTML : '';\n    if (score.scoreCK !== '') {\n        score.scoreCK = parseFloat(score.scoreCK);\n    }\n    // Extract values from <b> tags in scoreT10 and scoreCh fields\n    let scoreT10Field = tdList[8] ? tdList[8].innerHTML : '';\n    let scoreT10Match = scoreT10Field.match(/<b>(.*?)<\\/b>/);\n    score.scoreT10 = scoreT10Match ? scoreT10Match[1] : '';\n    if (score.scoreT10 !== '') {\n        score.scoreT10 = parseFloat(score.scoreT10);\n    }\n    let scoreChField = tdList[9] ? tdList[9].innerHTML : '';\n    let scoreChMatch = scoreChField.match(/<b[^>]*>(.*?)<\\/b>/);\n    score.scoreCh = scoreChMatch ? scoreChMatch[1] : '';\n    scoreAll.push(score);\n}\nlet duplicate = {};\nscoreAll.forEach((score) => {\n    if (!duplicate[score.name]) {\n        duplicate[score.name] = score;\n    } else {\n        if (score.scoreT10 > duplicate[score.name].scoreT10) {\n            duplicate[score.name] = score;\n        }\n    }\n});\nscoreAll = Object.values(duplicate);\nlet dataDownload = {\n    scoreAll,\n};\nlet json = JSON.stringify(dataDownload);\nconst blob = new Blob([json], { type: 'application/json' });\nconst url = URL.createObjectURL(blob);\nconst link = document.createElement('a');\nlink.href = url;\nlink.download = 'diem.json';\nlink.click();\nURL.revokeObjectURL(url);\nlink.remove();\n```\n<img src=\"https://i.ibb.co/j9tcg4b/image.png\" alt=\"image\" border=\"0\">\n\nSau khi thực hiện xong, file điểm sẽ được tải xuống máy tính của bạn với tên là `diem.json`\n### Bước 5: Tải dữ liệu điểm lên hệ thống\n\nTrở lại trang chủ của [VKU SCORE](https://nam077.github.io/vku-score-v2)      \nBấm vào nút `Chọn file` và chọn file `diem.json` vừa tải xuống ở bước trên hoăc kéo thả file `diem.json` vào ô chọn file\n\n<img src=\"https://i.ibb.co/3mYVvnn/image.png\" alt=\"image\" border=\"0\">\n\nSau khi xong dữ liệu điểm sẽ được hiển thị trên trang web.\n\n<img src=\"https://i.ibb.co/m9f2XQB/image.png\" alt=\"image\" border=\"0\">\n\n# Cách sử dụng VKU SCORE\n\n## Xem điểm sau khi cải thiện\n\nỞ giao diện chính của [VKU SCORE](https://nam077.github.io/vku-score-v2), bạn có thể xem điểm sau khi cải thiện bằng cách\nđổi các điểm ở mỗi hàng ở cột `Thay đổi` \n\n<img src=\"https://i.ibb.co/YBPvycv/image.png\" alt=\"image\" border=\"0\">\n\nSau khi thay đổi giá trị thì hệ thống sẽ tự động tính toán điểm của bạn và hiển thị `GPA Mới`\n\n<img src=\"https://i.ibb.co/4p5L0y8/image.png\" alt=\"image\" border=\"0\">       \n\n## Gợi ý đánh giá học phần\n\nỞ giao diện chính của [VKU SCORE](https://nam077.github.io/vku-score-v2) bạn có thể xem gợi ý đánh giá học phần bằng cách nhấn vào nút `Gợi ý cải thiện học phần` \nở góc dưới bên phải của trang web.\n \n<img src=\"https://i.ibb.co/qkr8nXD/image.png\" alt=\"image\" border=\"0\">\n\nCông cụ này sẽ dựa trên dữ liệu điểm của bạn sau đó tự động tính toán các thế mạnh của bạn và đưa ra gợi ý đánh giá học phần. \n\nSau khi đã tính toán xong một `Popup` sẽ hiện ra. Với một bảng là dữ liệu các học phần gợi ý cải thiện. Được hiển thị theo độ ưu tiên từ trên xuống dưới.\n\n<img src=\"https://i.ibb.co/0tgFhf2/image.png\" alt=\"image\" border=\"0\">\n\nBạn cũng có thể thay đổi các giá trị điểm của các học phần ở cột `Thay đổi` để xem điểm của bạn sẽ thay đổi như thế nào khi bạn cải thiện điểm của các học phần đó.\n\n<img src=\"https://i.ibb.co/GJVzFNd/image.png\" alt=\"image\" border=\"0\">\n\n# Tiện ích bổ sung cho VKU SCORE\n\n## Hướng dẫn sử dụng\n\nTruy cập vào <a href=https://daotao.vku.udn.vn/sv>https://daotao.vku.udn.vn/sv/</a>\n\nSau đó tiến hành đăng nhập tài khoản vào\n\nTruy cập vào <a href=\"https://daotao.vku.udn.vn/sv/diem\">https://daotao.vku.udn.vn/sv/diem</a>\n\nỞ tab hiện tại đang truy cập đến `https://daotao.vku.udn.vn/sv/diem` Ấn `F12` hoặc chuột phải vào trang rồi click vào `Inspect Element` để vào Development tool của trình duyệt.\n\n### Đánh giá lớp học phần\nMở file <a href=https://github.com/Nam077/VKU_ToolAuto_Danh_Gia_Hoc_Phan/blob/master/toolDanhGiaLopHocPhan.js>`toolDanhGiaLopHocPhan.js`</a> sau đó copy nội dung. Quay trở lại trình duyệt ở DevTool bấm vào mục Console sau đó dán nội dụng vào. Tiến hành nhấn nút `Enter` để tool tiến hành quét các học phần, sau đó  sẽ tự động đánh giá các học phần chưa đánh giá.\n\n### Đánh giá sự cần thiết của học phần\nMở file <a href=https://github.com/Nam077/VKU_ToolAuto_Danh_Gia_Hoc_Phan/blob/master/toolDanhGiaSuCanThiet.js>`toolDanhGiaSuCanThiet.js`</a>sau đó copy nội dung. Quay trở lại trình duyệt ở DevTool bấm vào mục Console sau đó dán nội dụng vào. Tiến hành nhấn nút `Enter` để tool tiến hành quét các học phần, sau đó  sẽ tự động đánh giá các học phần chưa đánh giá.\n\n => Lưu ý mọi người không được spam quá nhiều lần tránh việc web trường quá tải, xin cảm ơn\n\n\n\n                                "
}
